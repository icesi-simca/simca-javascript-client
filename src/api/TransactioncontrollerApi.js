/**
 * API SIMCA
 * SIMCA API Client
 *
 * OpenAPI spec version: 1.0.0
 * Contact: pdgsimca@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiSimca) {
      root.ApiSimca = {};
    }
    root.ApiSimca.TransactioncontrollerApi = factory(root.ApiSimca.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * Transactioncontroller service.
   * @module api/TransactioncontrollerApi
   * @version 1.0.0
   */

  /**
   * Constructs a new TransactioncontrollerApi. 
   * @alias module:api/TransactioncontrollerApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createPollutantUsingPOST1 operation.
     * @callback module:api/TransactioncontrollerApi~createPollutantUsingPOST1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Handle transaction
     * @param {Object} opts Optional parameters
     * @param {Number} opts.statePol Transaction state
     * @param {String} opts.referenceSale Transaction reference in SIMCA
     * @param {String} opts.referencePol Transaction reference in PayU
     * @param {String} opts.sign Signature
     * @param {Number} opts.value Transaction value
     * @param {Boolean} opts.test Test indicator
     * @param {module:api/TransactioncontrollerApi~createPollutantUsingPOST1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    this.createPollutantUsingPOST1 = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'state_pol': opts['statePol'],
        'reference_sale': opts['referenceSale'],
        'reference_pol': opts['referencePol'],
        'sign': opts['sign'],
        'value': opts['value'],
        'test': opts['test']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = null;

      return this.apiClient.callApi(
        '/api/transaction/v1/donation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
