/**
 * API SIMCA
 * SIMCA API Client
 *
 * OpenAPI spec version: 1.0.0
 * Contact: pdgsimca@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['./ApiClient', './model/AddMeasurementDTO', './model/AddPlaceDTO', './model/AddPollutantDTO', './model/AddUserDTO', './model/AddUserProfileDTO', './model/AddValuesToMeasurementDTO', './model/CountryDTO', './model/MeasurementDTO', './model/MeasurementDataDTO', './model/MeasurementsDTO', './model/PlaceDTO', './model/PlacesDTO', './model/PollutantDTO', './model/PollutantsDTO', './model/RequestPasswordResetDTO', './model/ResetPasswordDTO', './model/StateDTO', './model/TimezoneDTO', './model/UserDTO', './model/UserProfileDTO', './model/UsersDTO', './api/DatacontrollerApi', './api/MeasurementcontrollerApi', './api/PlacecontrollerApi', './api/PollutantcontrollerApi', './api/TransactioncontrollerApi', './api/UsercontrollerApi', './api/UserprofilecontrollerApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AddMeasurementDTO'), require('./model/AddPlaceDTO'), require('./model/AddPollutantDTO'), require('./model/AddUserDTO'), require('./model/AddUserProfileDTO'), require('./model/AddValuesToMeasurementDTO'), require('./model/CountryDTO'), require('./model/MeasurementDTO'), require('./model/MeasurementDataDTO'), require('./model/MeasurementsDTO'), require('./model/PlaceDTO'), require('./model/PlacesDTO'), require('./model/PollutantDTO'), require('./model/PollutantsDTO'), require('./model/RequestPasswordResetDTO'), require('./model/ResetPasswordDTO'), require('./model/StateDTO'), require('./model/TimezoneDTO'), require('./model/UserDTO'), require('./model/UserProfileDTO'), require('./model/UsersDTO'), require('./api/DatacontrollerApi'), require('./api/MeasurementcontrollerApi'), require('./api/PlacecontrollerApi'), require('./api/PollutantcontrollerApi'), require('./api/TransactioncontrollerApi'), require('./api/UsercontrollerApi'), require('./api/UserprofilecontrollerApi'));
  }
}(function(ApiClient, AddMeasurementDTO, AddPlaceDTO, AddPollutantDTO, AddUserDTO, AddUserProfileDTO, AddValuesToMeasurementDTO, CountryDTO, MeasurementDTO, MeasurementDataDTO, MeasurementsDTO, PlaceDTO, PlacesDTO, PollutantDTO, PollutantsDTO, RequestPasswordResetDTO, ResetPasswordDTO, StateDTO, TimezoneDTO, UserDTO, UserProfileDTO, UsersDTO, DatacontrollerApi, MeasurementcontrollerApi, PlacecontrollerApi, PollutantcontrollerApi, TransactioncontrollerApi, UsercontrollerApi, UserprofilecontrollerApi) {
  'use strict';

  /**
   * SIMCA_API_Client.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ApiSimca = require('index'); // See note below*.
   * var xxxSvc = new ApiSimca.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ApiSimca.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ApiSimca.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ApiSimca.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AddMeasurementDTO model constructor.
     * @property {module:model/AddMeasurementDTO}
     */
    AddMeasurementDTO: AddMeasurementDTO,
    /**
     * The AddPlaceDTO model constructor.
     * @property {module:model/AddPlaceDTO}
     */
    AddPlaceDTO: AddPlaceDTO,
    /**
     * The AddPollutantDTO model constructor.
     * @property {module:model/AddPollutantDTO}
     */
    AddPollutantDTO: AddPollutantDTO,
    /**
     * The AddUserDTO model constructor.
     * @property {module:model/AddUserDTO}
     */
    AddUserDTO: AddUserDTO,
    /**
     * The AddUserProfileDTO model constructor.
     * @property {module:model/AddUserProfileDTO}
     */
    AddUserProfileDTO: AddUserProfileDTO,
    /**
     * The AddValuesToMeasurementDTO model constructor.
     * @property {module:model/AddValuesToMeasurementDTO}
     */
    AddValuesToMeasurementDTO: AddValuesToMeasurementDTO,
    /**
     * The CountryDTO model constructor.
     * @property {module:model/CountryDTO}
     */
    CountryDTO: CountryDTO,
    /**
     * The MeasurementDTO model constructor.
     * @property {module:model/MeasurementDTO}
     */
    MeasurementDTO: MeasurementDTO,
    /**
     * The MeasurementDataDTO model constructor.
     * @property {module:model/MeasurementDataDTO}
     */
    MeasurementDataDTO: MeasurementDataDTO,
    /**
     * The MeasurementsDTO model constructor.
     * @property {module:model/MeasurementsDTO}
     */
    MeasurementsDTO: MeasurementsDTO,
    /**
     * The PlaceDTO model constructor.
     * @property {module:model/PlaceDTO}
     */
    PlaceDTO: PlaceDTO,
    /**
     * The PlacesDTO model constructor.
     * @property {module:model/PlacesDTO}
     */
    PlacesDTO: PlacesDTO,
    /**
     * The PollutantDTO model constructor.
     * @property {module:model/PollutantDTO}
     */
    PollutantDTO: PollutantDTO,
    /**
     * The PollutantsDTO model constructor.
     * @property {module:model/PollutantsDTO}
     */
    PollutantsDTO: PollutantsDTO,
    /**
     * The RequestPasswordResetDTO model constructor.
     * @property {module:model/RequestPasswordResetDTO}
     */
    RequestPasswordResetDTO: RequestPasswordResetDTO,
    /**
     * The ResetPasswordDTO model constructor.
     * @property {module:model/ResetPasswordDTO}
     */
    ResetPasswordDTO: ResetPasswordDTO,
    /**
     * The StateDTO model constructor.
     * @property {module:model/StateDTO}
     */
    StateDTO: StateDTO,
    /**
     * The TimezoneDTO model constructor.
     * @property {module:model/TimezoneDTO}
     */
    TimezoneDTO: TimezoneDTO,
    /**
     * The UserDTO model constructor.
     * @property {module:model/UserDTO}
     */
    UserDTO: UserDTO,
    /**
     * The UserProfileDTO model constructor.
     * @property {module:model/UserProfileDTO}
     */
    UserProfileDTO: UserProfileDTO,
    /**
     * The UsersDTO model constructor.
     * @property {module:model/UsersDTO}
     */
    UsersDTO: UsersDTO,
    /**
     * The DatacontrollerApi service constructor.
     * @property {module:api/DatacontrollerApi}
     */
    DatacontrollerApi: DatacontrollerApi,
    /**
     * The MeasurementcontrollerApi service constructor.
     * @property {module:api/MeasurementcontrollerApi}
     */
    MeasurementcontrollerApi: MeasurementcontrollerApi,
    /**
     * The PlacecontrollerApi service constructor.
     * @property {module:api/PlacecontrollerApi}
     */
    PlacecontrollerApi: PlacecontrollerApi,
    /**
     * The PollutantcontrollerApi service constructor.
     * @property {module:api/PollutantcontrollerApi}
     */
    PollutantcontrollerApi: PollutantcontrollerApi,
    /**
     * The TransactioncontrollerApi service constructor.
     * @property {module:api/TransactioncontrollerApi}
     */
    TransactioncontrollerApi: TransactioncontrollerApi,
    /**
     * The UsercontrollerApi service constructor.
     * @property {module:api/UsercontrollerApi}
     */
    UsercontrollerApi: UsercontrollerApi,
    /**
     * The UserprofilecontrollerApi service constructor.
     * @property {module:api/UserprofilecontrollerApi}
     */
    UserprofilecontrollerApi: UserprofilecontrollerApi
  };

  return exports;
}));
